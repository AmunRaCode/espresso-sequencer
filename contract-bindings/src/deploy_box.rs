pub use deploy_box::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types
)]
pub mod deploy_box {
    #[allow(deprecated)]
    fn __abi() -> ::ethers::core::abi::Abi {
        ::ethers::core::abi::ethabi::Contract {
            constructor: ::core::option::Option::None,
            functions: ::core::convert::From::from([
                (
                    ::std::borrow::ToOwned::to_owned("IS_SCRIPT"),
                    ::std::vec![::ethers::core::abi::ethabi::Function {
                        name: ::std::borrow::ToOwned::to_owned("IS_SCRIPT"),
                        inputs: ::std::vec![],
                        outputs: ::std::vec![::ethers::core::abi::ethabi::Param {
                            name: ::std::string::String::new(),
                            kind: ::ethers::core::abi::ethabi::ParamType::Bool,
                            internal_type: ::core::option::Option::Some(
                                ::std::borrow::ToOwned::to_owned("bool"),
                            ),
                        },],
                        constant: ::core::option::Option::None,
                        state_mutability: ::ethers::core::abi::ethabi::StateMutability::View,
                    },],
                ),
                (
                    ::std::borrow::ToOwned::to_owned("deployBox"),
                    ::std::vec![::ethers::core::abi::ethabi::Function {
                        name: ::std::borrow::ToOwned::to_owned("deployBox"),
                        inputs: ::std::vec![],
                        outputs: ::std::vec![::ethers::core::abi::ethabi::Param {
                            name: ::std::string::String::new(),
                            kind: ::ethers::core::abi::ethabi::ParamType::Address,
                            internal_type: ::core::option::Option::Some(
                                ::std::borrow::ToOwned::to_owned("address"),
                            ),
                        },],
                        constant: ::core::option::Option::None,
                        state_mutability: ::ethers::core::abi::ethabi::StateMutability::NonPayable,
                    },],
                ),
                (
                    ::std::borrow::ToOwned::to_owned("run"),
                    ::std::vec![::ethers::core::abi::ethabi::Function {
                        name: ::std::borrow::ToOwned::to_owned("run"),
                        inputs: ::std::vec![],
                        outputs: ::std::vec![::ethers::core::abi::ethabi::Param {
                            name: ::std::string::String::new(),
                            kind: ::ethers::core::abi::ethabi::ParamType::Address,
                            internal_type: ::core::option::Option::Some(
                                ::std::borrow::ToOwned::to_owned("address"),
                            ),
                        },],
                        constant: ::core::option::Option::None,
                        state_mutability: ::ethers::core::abi::ethabi::StateMutability::NonPayable,
                    },],
                ),
            ]),
            events: ::std::collections::BTreeMap::new(),
            errors: ::std::collections::BTreeMap::new(),
            receive: false,
            fallback: false,
        }
    }
    ///The parsed JSON ABI of the contract.
    pub static DEPLOYBOX_ABI: ::ethers::contract::Lazy<::ethers::core::abi::Abi> =
        ::ethers::contract::Lazy::new(__abi);
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = b"`\x80`@R`\x04\x80T`\x01`\xFF\x19\x91\x82\x16\x81\x17\x90\x92U`\x0C\x80T\x90\x91\x16\x90\x91\x17\x90U4\x80\x15a\0-W`\0\x80\xFD[Pa\x16\xCD\x80a\0=`\09`\0\xF3\xFE`\x80`@R4\x80\x15a\0\x10W`\0\x80\xFD[P`\x046\x10a\0AW`\x005`\xE0\x1C\x80c)\xFC\x04u\x14a\0FW\x80c\xC0@b&\x14a\0kW\x80c\xF8\xCC\xBFG\x14a\0sW[`\0\x80\xFD[a\0Na\0\x90V[`@Q`\x01`\x01`\xA0\x1B\x03\x90\x91\x16\x81R` \x01[`@Q\x80\x91\x03\x90\xF3[a\0Na\x02*V[`\x0CTa\0\x80\x90`\xFF\x16\x81V[`@Q\x90\x15\x15\x81R` \x01a\0bV[`\0\x7F\x88\\\xB6\x92@\xA95\xD62\xD7\x9C1q\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-`\0\x1C`\x01`\x01`\xA0\x1B\x03\x16c\x7F\xB5)\x7F`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01`\0`@Q\x80\x83\x03\x81`\0\x87\x80;\x15\x80\x15a\0\xF0W`\0\x80\xFD[PZ\xF1\x15\x80\x15a\x01\x04W=`\0\x80>=`\0\xFD[PPPP`\0`@Qa\x01\x16\x90a\x02;V[`@Q\x80\x91\x03\x90`\0\xF0\x80\x15\x80\x15a\x012W=`\0\x80>=`\0\xFD[P`@\x80Q3`$\x80\x83\x01\x91\x90\x91R\x82Q\x80\x83\x03\x90\x91\x01\x81R`D\x90\x91\x01\x82R` \x81\x01\x80Q`\x01`\x01`\xE0\x1B\x03\x16c J\x7F\x07`\xE2\x1B\x17\x90R\x90Q\x91\x92P\x90`\0\x90\x83\x90\x83\x90a\x01\x82\x90a\x02HV[a\x01\x8D\x92\x91\x90a\x02UV[`@Q\x80\x91\x03\x90`\0\xF0\x80\x15\x80\x15a\x01\xA9W=`\0\x80>=`\0\xFD[P\x90P\x7F\x88\\\xB6\x92@\xA95\xD62\xD7\x9C1q\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-`\0\x1C`\x01`\x01`\xA0\x1B\x03\x16cv\xEA\xDD6`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01`\0`@Q\x80\x83\x03\x81`\0\x87\x80;\x15\x80\x15a\x02\nW`\0\x80\xFD[PZ\xF1\x15\x80\x15a\x02\x1EW=`\0\x80>=`\0\xFD[P\x92\x96\x95PPPPPPV[`\0\x80a\x025a\0\x90V[\x92\x91PPV[a\x10+\x80a\x02\xB5\x839\x01\x90V[a\x03\xE1\x80a\x12\xE0\x839\x01\x90V[`\x01\x80`\xA0\x1B\x03\x83\x16\x81R`\0` `@` \x84\x01R\x83Q\x80`@\x85\x01R`\0[\x81\x81\x10\x15a\x02\x92W\x85\x81\x01\x83\x01Q\x85\x82\x01``\x01R\x82\x01a\x02vV[P`\0``\x82\x86\x01\x01R```\x1F\x19`\x1F\x83\x01\x16\x85\x01\x01\x92PPP\x93\x92PPPV\xFE`\xA0`@R0`\x80R4\x80\x15a\0\x14W`\0\x80\xFD[Pa\0\x1Da\0\"V[a\0\xD4V[\x7F\xF0\xC5~\x16\x84\r\xF0@\xF1P\x88\xDC/\x81\xFE9\x1C9#\xBE\xC7>#\xA9f.\xFC\x9C\"\x9Cj\0\x80Th\x01\0\0\0\0\0\0\0\0\x90\x04`\xFF\x16\x15a\0rW`@Qc\xF9.\xE8\xA9`\xE0\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[\x80T`\x01`\x01`@\x1B\x03\x90\x81\x16\x14a\0\xD1W\x80T`\x01`\x01`@\x1B\x03\x19\x16`\x01`\x01`@\x1B\x03\x90\x81\x17\x82U`@Q\x90\x81R\x7F\xC7\xF5\x05\xB2\xF3q\xAE!u\xEEI\x13\xF4I\x9E\x1F&3\xA7\xB5\x93c!\xEE\xD1\xCD\xAE\xB6\x11Q\x81\xD2\x90` \x01`@Q\x80\x91\x03\x90\xA1[PV[`\x80Qa\x0F.a\0\xFD`\09`\0\x81\x81a\x07\x8B\x01R\x81\x81a\x07\xB4\x01Ra\t9\x01Ra\x0F.`\0\xF3\xFE`\x80`@R`\x046\x10a\0\xC2W`\x005`\xE0\x1C\x80c\x81)\xFC\x1C\x11a\0\x7FW\x80c\xAD<\xB1\xCC\x11a\0YW\x80c\xAD<\xB1\xCC\x14a\x02%W\x80c\xB7'O\xBE\x14a\x02cW\x80c\xF2\xFD\xE3\x8B\x14a\x02\x83W\x80c\xF3@\xFA\x01\x14a\x02\xA3W`\0\x80\xFD[\x80c\x81)\xFC\x1C\x14a\x01{W\x80c\x8D\xA5\xCB[\x14a\x01\x90W\x80c\x9A\xA3\xBBE\x14a\x01\xD7W`\0\x80\xFD[\x80c\x10\xEC\xD8\x03\x14a\0\xC7W\x80cI\xFE\rM\x14a\0\xE9W\x80cO\x1E\xF2\x86\x14a\x01\tW\x80cR\xD1\x90-\x14a\x01\x1CW\x80cqP\x18\xA6\x14a\x01DW\x80cq\xD8\xCA\x0B\x14a\x01YW[`\0\x80\xFD[4\x80\x15a\0\xD3W`\0\x80\xFD[Pa\0\xE7a\0\xE26`\x04a\x0C\x87V[a\x02\xB6V[\0[4\x80\x15a\0\xF5W`\0\x80\xFD[Pa\0\xE7a\x01\x046`\x04a\x0C\x87V[a\x03mV[a\0\xE7a\x01\x176`\x04a\x0C\xD2V[a\x04oV[4\x80\x15a\x01(W`\0\x80\xFD[Pa\x011a\x04\x8EV[`@Q\x90\x81R` \x01[`@Q\x80\x91\x03\x90\xF3[4\x80\x15a\x01PW`\0\x80\xFD[Pa\0\xE7a\x04\xABV[4\x80\x15a\x01eW`\0\x80\xFD[Pa\x01na\x04\xBFV[`@Qa\x01;\x91\x90a\r\xCCV[4\x80\x15a\x01\x87W`\0\x80\xFD[Pa\0\xE7a\x05<V[4\x80\x15a\x01\x9CW`\0\x80\xFD[P\x7F\x90\x16\xD0\x9Dr\xD4\x0F\xDA\xE2\xFD\x8C\xEA\xC6\xB6#Lw\x06!O\xD3\x9C\x1C\xD1\xE6\t\xA0R\x8C\x19\x93\0T`@Q`\x01`\x01`\xA0\x1B\x03\x90\x91\x16\x81R` \x01a\x01;V[4\x80\x15a\x01\xE3W`\0\x80\xFD[Pa\x02\x16a\x01\xF26`\x04a\r\xF6V[`\0` \x81\x90R\x90\x81R`@\x90 \x80T`\x01\x82\x01T`\x02\x90\x92\x01T\x90\x91`\xFF\x16\x90\x83V[`@Qa\x01;\x93\x92\x91\x90a\x0E\x11V[4\x80\x15a\x021W`\0\x80\xFD[Pa\x02V`@Q\x80`@\x01`@R\x80`\x05\x81R` \x01d\x03R\xE3\x02\xE3`\xDC\x1B\x81RP\x81V[`@Qa\x01;\x91\x90a\x0EWV[4\x80\x15a\x02oW`\0\x80\xFD[Pa\0\xE7a\x02~6`\x04a\x0E\x8AV[a\x06SV[4\x80\x15a\x02\x8FW`\0\x80\xFD[Pa\0\xE7a\x02\x9E6`\x04a\r\xF6V[a\x06\xBAV[a\0\xE7a\x02\xB16`\x04a\r\xF6V[a\x06\xFDV[3`\0\x90\x81R` \x81\x90R`@\x90 T\x15a\x02\xE4W`@Qc\x16\xA6\xB8C`\xE3\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[\x80`\0\x03a\x03\x05W`@Qcia\x07\x13`\xE0\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[`@\x80Q``\x81\x01\x90\x91R\x81\x81R` \x81\x01`\0\x81R`\0` \x91\x82\x01\x81\x90R3\x81R\x80\x82R`@\x90 \x82Q\x81U\x90\x82\x01Q`\x01\x80\x83\x01\x80T\x90\x91`\xFF\x19\x90\x91\x16\x90\x83\x81\x81\x11\x15a\x03XWa\x03Xa\r\x94V[\x02\x17\x90UP`@\x82\x01Q\x81`\x02\x01U\x90PPPV[\x80`\0\x03a\x03\x8EW`@Qcia\x07\x13`\xE0\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[3`\0\x90\x81R` \x81\x90R`@\x81 T\x90\x03a\x03\xBDW`@Qc\xF8\"\x86Y`\xE0\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[3`\0\x90\x81R` \x81\x81R`@\x80\x83 \x81Q``\x81\x01\x90\x92R\x80T\x82R`\x01\x80\x82\x01T\x92\x93\x91\x92\x91\x84\x01\x91`\xFF\x16\x90\x81\x11\x15a\x03\xFBWa\x03\xFBa\r\x94V[`\x01\x81\x11\x15a\x04\x0CWa\x04\x0Ca\r\x94V[\x81R`\x02\x91\x90\x91\x01T` \x91\x82\x01R\x83\x82R3`\0\x90\x81R\x80\x82R`@\x90 \x82Q\x81U\x90\x82\x01Q`\x01\x80\x83\x01\x80T\x94\x95P\x85\x94\x90\x91`\xFF\x19\x90\x91\x16\x90\x83\x81\x81\x11\x15a\x04YWa\x04Ya\r\x94V[\x02\x17\x90UP`@\x82\x01Q\x81`\x02\x01U\x90PPPPV[a\x04wa\x07\x80V[a\x04\x80\x82a\x08%V[a\x04\x8A\x82\x82a\x08lV[PPV[`\0a\x04\x98a\t.V[P`\0\x80Q` a\x0F\x02\x839\x81Q\x91R\x90V[a\x04\xB3a\twV[a\x04\xBD`\0a\t\xD2V[V[`@\x80Q``\x81\x01\x82R`\0\x80\x82R` \x82\x01\x81\x90R\x91\x81\x01\x91\x90\x91R3`\0\x90\x81R` \x81\x81R`@\x91\x82\x90 \x82Q``\x81\x01\x90\x93R\x80T\x83R`\x01\x80\x82\x01T\x91\x92\x84\x01\x91`\xFF\x16\x90\x81\x11\x15a\x05\x18Wa\x05\x18a\r\x94V[`\x01\x81\x11\x15a\x05)Wa\x05)a\r\x94V[\x81R` \x01`\x02\x82\x01T\x81RPP\x90P\x90V[\x7F\xF0\xC5~\x16\x84\r\xF0@\xF1P\x88\xDC/\x81\xFE9\x1C9#\xBE\xC7>#\xA9f.\xFC\x9C\"\x9Cj\0\x80T`\x01`@\x1B\x81\x04`\xFF\x16\x15\x90g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16`\0\x81\x15\x80\x15a\x05\x82WP\x82[\x90P`\0\x82g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16`\x01\x14\x80\x15a\x05\x9FWP0;\x15[\x90P\x81\x15\x80\x15a\x05\xADWP\x80\x15[\x15a\x05\xCBW`@Qc\xF9.\xE8\xA9`\xE0\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[\x84Tg\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x19\x16`\x01\x17\x85U\x83\x15a\x05\xF5W\x84T`\xFF`@\x1B\x19\x16`\x01`@\x1B\x17\x85U[a\x05\xFE3a\nCV[a\x06\x06a\nTV[\x83\x15a\x06LW\x84T`\xFF`@\x1B\x19\x16\x85U`@Q`\x01\x81R\x7F\xC7\xF5\x05\xB2\xF3q\xAE!u\xEEI\x13\xF4I\x9E\x1F&3\xA7\xB5\x93c!\xEE\xD1\xCD\xAE\xB6\x11Q\x81\xD2\x90` \x01`@Q\x80\x91\x03\x90\xA1[PPPPPV[3`\0\x90\x81R` \x81\x90R`@\x81 T\x90\x03a\x06\x82W`@Qc\xF8\"\x86Y`\xE0\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[3`\0\x90\x81R` \x81\x90R`@\x90 `\x01\x90\x81\x01\x80T\x83\x92`\xFF\x19\x90\x91\x16\x90\x83\x81\x81\x11\x15a\x06\xB2Wa\x06\xB2a\r\x94V[\x02\x17\x90UPPV[a\x06\xC2a\twV[`\x01`\x01`\xA0\x1B\x03\x81\x16a\x06\xF1W`@Qc\x1EO\xBD\xF7`\xE0\x1B\x81R`\0`\x04\x82\x01R`$\x01[`@Q\x80\x91\x03\x90\xFD[a\x06\xFA\x81a\t\xD2V[PV[4`\0\x03a\x07\x1EW`@Qc\xA0C\x9C\x1F`\xE0\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[3`\0\x90\x81R` \x81\x90R`@\x81 T\x90\x03a\x07MW`@Qc\xF8\"\x86Y`\xE0\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[`\x01`\x01`\xA0\x1B\x03\x81\x16`\0\x90\x81R` \x81\x90R`@\x81 `\x02\x01\x80T4\x92\x90a\x07x\x90\x84\x90a\x0E\xABV[\x90\x91UPPPV[0`\x01`\x01`\xA0\x1B\x03\x7F\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x16\x14\x80a\x08\x07WP\x7F\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\x01`\x01`\xA0\x1B\x03\x16a\x07\xFB`\0\x80Q` a\x0F\x02\x839\x81Q\x91RT`\x01`\x01`\xA0\x1B\x03\x16\x90V[`\x01`\x01`\xA0\x1B\x03\x16\x14\x15[\x15a\x04\xBDW`@Qcp>F\xDD`\xE1\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[a\x08-a\twV[`@Q`\x01`\x01`\xA0\x1B\x03\x82\x16\x81R\x7F\xF7\x87!\"n\xFE\x9A\x1B\xB6x\x18\x9A\x16\xD1UI(\xB9\xF2\x19.,\xB9>\xED\xA8;y\xFA@\0}\x90` \x01`@Q\x80\x91\x03\x90\xA1PV[\x81`\x01`\x01`\xA0\x1B\x03\x16cR\xD1\x90-`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x92PPP\x80\x15a\x08\xC6WP`@\x80Q`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01\x90\x92Ra\x08\xC3\x91\x81\x01\x90a\x0E\xCCV[`\x01[a\x08\xEEW`@QcL\x9C\x8C\xE3`\xE0\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x83\x16`\x04\x82\x01R`$\x01a\x06\xE8V[`\0\x80Q` a\x0F\x02\x839\x81Q\x91R\x81\x14a\t\x1FW`@Qc*\x87Ri`\xE2\x1B\x81R`\x04\x81\x01\x82\x90R`$\x01a\x06\xE8V[a\t)\x83\x83a\n\\V[PPPV[0`\x01`\x01`\xA0\x1B\x03\x7F\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x16\x14a\x04\xBDW`@Qcp>F\xDD`\xE1\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[3a\t\xA9\x7F\x90\x16\xD0\x9Dr\xD4\x0F\xDA\xE2\xFD\x8C\xEA\xC6\xB6#Lw\x06!O\xD3\x9C\x1C\xD1\xE6\t\xA0R\x8C\x19\x93\0T`\x01`\x01`\xA0\x1B\x03\x16\x90V[`\x01`\x01`\xA0\x1B\x03\x16\x14a\x04\xBDW`@Qc\x11\x8C\xDA\xA7`\xE0\x1B\x81R3`\x04\x82\x01R`$\x01a\x06\xE8V[\x7F\x90\x16\xD0\x9Dr\xD4\x0F\xDA\xE2\xFD\x8C\xEA\xC6\xB6#Lw\x06!O\xD3\x9C\x1C\xD1\xE6\t\xA0R\x8C\x19\x93\0\x80T`\x01`\x01`\xA0\x1B\x03\x19\x81\x16`\x01`\x01`\xA0\x1B\x03\x84\x81\x16\x91\x82\x17\x84U`@Q\x92\x16\x91\x82\x90\x7F\x8B\xE0\x07\x9CS\x16Y\x14\x13D\xCD\x1F\xD0\xA4\xF2\x84\x19I\x7F\x97\"\xA3\xDA\xAF\xE3\xB4\x18okdW\xE0\x90`\0\x90\xA3PPPV[a\nKa\n\xB2V[a\x06\xFA\x81a\n\xFBV[a\x04\xBDa\n\xB2V[a\ne\x82a\x0B\x03V[`@Q`\x01`\x01`\xA0\x1B\x03\x83\x16\x90\x7F\xBC|\xD7Z \xEE'\xFD\x9A\xDE\xBA\xB3 A\xF7U!M\xBCk\xFF\xA9\x0C\xC0\"[9\xDA.\\-;\x90`\0\x90\xA2\x80Q\x15a\n\xAAWa\t)\x82\x82a\x0BhV[a\x04\x8Aa\x0B\xE0V[\x7F\xF0\xC5~\x16\x84\r\xF0@\xF1P\x88\xDC/\x81\xFE9\x1C9#\xBE\xC7>#\xA9f.\xFC\x9C\"\x9Cj\0T`\x01`@\x1B\x90\x04`\xFF\x16a\x04\xBDW`@Qc\x1A\xFC\xD7\x9F`\xE3\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[a\x06\xC2a\n\xB2V[\x80`\x01`\x01`\xA0\x1B\x03\x16;`\0\x03a\x0B9W`@QcL\x9C\x8C\xE3`\xE0\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x82\x16`\x04\x82\x01R`$\x01a\x06\xE8V[`\0\x80Q` a\x0F\x02\x839\x81Q\x91R\x80T`\x01`\x01`\xA0\x1B\x03\x19\x16`\x01`\x01`\xA0\x1B\x03\x92\x90\x92\x16\x91\x90\x91\x17\x90UV[```\0\x80\x84`\x01`\x01`\xA0\x1B\x03\x16\x84`@Qa\x0B\x85\x91\x90a\x0E\xE5V[`\0`@Q\x80\x83\x03\x81\x85Z\xF4\x91PP=\x80`\0\x81\x14a\x0B\xC0W`@Q\x91P`\x1F\x19`?=\x01\x16\x82\x01`@R=\x82R=`\0` \x84\x01>a\x0B\xC5V[``\x91P[P\x91P\x91Pa\x0B\xD5\x85\x83\x83a\x0B\xFFV[\x92PPP[\x92\x91PPV[4\x15a\x04\xBDW`@Qc\xB3\x98\x97\x9F`\xE0\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[``\x82a\x0C\x14Wa\x0C\x0F\x82a\x0C^V[a\x0CWV[\x81Q\x15\x80\x15a\x0C+WP`\x01`\x01`\xA0\x1B\x03\x84\x16;\x15[\x15a\x0CTW`@Qc\x99\x96\xB3\x15`\xE0\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x85\x16`\x04\x82\x01R`$\x01a\x06\xE8V[P\x80[\x93\x92PPPV[\x80Q\x15a\x0CnW\x80Q\x80\x82` \x01\xFD[`@Qc\n\x12\xF5!`\xE1\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[`\0` \x82\x84\x03\x12\x15a\x0C\x99W`\0\x80\xFD[P5\x91\x90PV[\x805`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14a\x0C\xB7W`\0\x80\xFD[\x91\x90PV[cNH{q`\xE0\x1B`\0R`A`\x04R`$`\0\xFD[`\0\x80`@\x83\x85\x03\x12\x15a\x0C\xE5W`\0\x80\xFD[a\x0C\xEE\x83a\x0C\xA0V[\x91P` \x83\x015g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\x82\x11\x15a\r\x0BW`\0\x80\xFD[\x81\x85\x01\x91P\x85`\x1F\x83\x01\x12a\r\x1FW`\0\x80\xFD[\x815\x81\x81\x11\x15a\r1Wa\r1a\x0C\xBCV[`@Q`\x1F\x82\x01`\x1F\x19\x90\x81\x16`?\x01\x16\x81\x01\x90\x83\x82\x11\x81\x83\x10\x17\x15a\rYWa\rYa\x0C\xBCV[\x81`@R\x82\x81R\x88` \x84\x87\x01\x01\x11\x15a\rrW`\0\x80\xFD[\x82` \x86\x01` \x83\x017`\0` \x84\x83\x01\x01R\x80\x95PPPPPP\x92P\x92\x90PV[cNH{q`\xE0\x1B`\0R`!`\x04R`$`\0\xFD[`\x02\x81\x10a\r\xC8WcNH{q`\xE0\x1B`\0R`!`\x04R`$`\0\xFD[\x90RV[\x81Q\x81R` \x80\x83\x01Q``\x83\x01\x91a\r\xE7\x90\x84\x01\x82a\r\xAAV[P`@\x92\x83\x01Q\x91\x90\x92\x01R\x90V[`\0` \x82\x84\x03\x12\x15a\x0E\x08W`\0\x80\xFD[a\x0CW\x82a\x0C\xA0V[\x83\x81R``\x81\x01a\x0E%` \x83\x01\x85a\r\xAAV[\x82`@\x83\x01R\x94\x93PPPPV[`\0[\x83\x81\x10\x15a\x0ENW\x81\x81\x01Q\x83\x82\x01R` \x01a\x0E6V[PP`\0\x91\x01RV[` \x81R`\0\x82Q\x80` \x84\x01Ra\x0Ev\x81`@\x85\x01` \x87\x01a\x0E3V[`\x1F\x01`\x1F\x19\x16\x91\x90\x91\x01`@\x01\x92\x91PPV[`\0` \x82\x84\x03\x12\x15a\x0E\x9CW`\0\x80\xFD[\x815`\x02\x81\x10a\x0CWW`\0\x80\xFD[\x80\x82\x01\x80\x82\x11\x15a\x0B\xDAWcNH{q`\xE0\x1B`\0R`\x11`\x04R`$`\0\xFD[`\0` \x82\x84\x03\x12\x15a\x0E\xDEW`\0\x80\xFD[PQ\x91\x90PV[`\0\x82Qa\x0E\xF7\x81\x84` \x87\x01a\x0E3V[\x91\x90\x91\x01\x92\x91PPV\xFE6\x08\x94\xA1;\xA1\xA3!\x06g\xC8(I-\xB9\x8D\xCA> v\xCC75\xA9 \xA3\xCAP]8+\xBC\xA1dsolcC\0\x08\x17\0\n`\x80`@R`@Qa\x03\xE18\x03\x80a\x03\xE1\x839\x81\x01`@\x81\x90Ra\0\"\x91a\x02hV[a\0,\x82\x82a\x003V[PPa\x03RV[a\0<\x82a\0\x92V[`@Q`\x01`\x01`\xA0\x1B\x03\x83\x16\x90\x7F\xBC|\xD7Z \xEE'\xFD\x9A\xDE\xBA\xB3 A\xF7U!M\xBCk\xFF\xA9\x0C\xC0\"[9\xDA.\\-;\x90`\0\x90\xA2\x80Q\x15a\0\x86Wa\0\x81\x82\x82a\x01\x0EV[PPPV[a\0\x8Ea\x01\x85V[PPV[\x80`\x01`\x01`\xA0\x1B\x03\x16;`\0\x03a\0\xCDW`@QcL\x9C\x8C\xE3`\xE0\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x82\x16`\x04\x82\x01R`$\x01[`@Q\x80\x91\x03\x90\xFD[\x7F6\x08\x94\xA1;\xA1\xA3!\x06g\xC8(I-\xB9\x8D\xCA> v\xCC75\xA9 \xA3\xCAP]8+\xBC\x80T`\x01`\x01`\xA0\x1B\x03\x19\x16`\x01`\x01`\xA0\x1B\x03\x92\x90\x92\x16\x91\x90\x91\x17\x90UV[```\0\x80\x84`\x01`\x01`\xA0\x1B\x03\x16\x84`@Qa\x01+\x91\x90a\x036V[`\0`@Q\x80\x83\x03\x81\x85Z\xF4\x91PP=\x80`\0\x81\x14a\x01fW`@Q\x91P`\x1F\x19`?=\x01\x16\x82\x01`@R=\x82R=`\0` \x84\x01>a\x01kV[``\x91P[P\x90\x92P\x90Pa\x01|\x85\x83\x83a\x01\xA6V[\x95\x94PPPPPV[4\x15a\x01\xA4W`@Qc\xB3\x98\x97\x9F`\xE0\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[V[``\x82a\x01\xBBWa\x01\xB6\x82a\x02\x05V[a\x01\xFEV[\x81Q\x15\x80\x15a\x01\xD2WP`\x01`\x01`\xA0\x1B\x03\x84\x16;\x15[\x15a\x01\xFBW`@Qc\x99\x96\xB3\x15`\xE0\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x85\x16`\x04\x82\x01R`$\x01a\0\xC4V[P\x80[\x93\x92PPPV[\x80Q\x15a\x02\x15W\x80Q\x80\x82` \x01\xFD[`@Qc\n\x12\xF5!`\xE1\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[cNH{q`\xE0\x1B`\0R`A`\x04R`$`\0\xFD[`\0[\x83\x81\x10\x15a\x02_W\x81\x81\x01Q\x83\x82\x01R` \x01a\x02GV[PP`\0\x91\x01RV[`\0\x80`@\x83\x85\x03\x12\x15a\x02{W`\0\x80\xFD[\x82Q`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14a\x02\x92W`\0\x80\xFD[` \x84\x01Q\x90\x92P`\x01`\x01`@\x1B\x03\x80\x82\x11\x15a\x02\xAFW`\0\x80\xFD[\x81\x85\x01\x91P\x85`\x1F\x83\x01\x12a\x02\xC3W`\0\x80\xFD[\x81Q\x81\x81\x11\x15a\x02\xD5Wa\x02\xD5a\x02.V[`@Q`\x1F\x82\x01`\x1F\x19\x90\x81\x16`?\x01\x16\x81\x01\x90\x83\x82\x11\x81\x83\x10\x17\x15a\x02\xFDWa\x02\xFDa\x02.V[\x81`@R\x82\x81R\x88` \x84\x87\x01\x01\x11\x15a\x03\x16W`\0\x80\xFD[a\x03'\x83` \x83\x01` \x88\x01a\x02DV[\x80\x95PPPPPP\x92P\x92\x90PV[`\0\x82Qa\x03H\x81\x84` \x87\x01a\x02DV[\x91\x90\x91\x01\x92\x91PPV[`\x81\x80a\x03``\09`\0\xF3\xFE`\x80`@R`\n`\x0CV[\0[`\x18`\x14`\x1AV[`QV[V[`\0`L\x7F6\x08\x94\xA1;\xA1\xA3!\x06g\xC8(I-\xB9\x8D\xCA> v\xCC75\xA9 \xA3\xCAP]8+\xBCT`\x01`\x01`\xA0\x1B\x03\x16\x90V[\x90P\x90V[6`\0\x807`\0\x806`\0\x84Z\xF4=`\0\x80>\x80\x80\x15`oW=`\0\xF3[=`\0\xFD\xFE\xA1dsolcC\0\x08\x17\0\n\xA1dsolcC\0\x08\x17\0\n";
    /// The bytecode of the contract.
    pub static DEPLOYBOX_BYTECODE: ::ethers::core::types::Bytes =
        ::ethers::core::types::Bytes::from_static(__BYTECODE);
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = b"`\x80`@R4\x80\x15a\0\x10W`\0\x80\xFD[P`\x046\x10a\0AW`\x005`\xE0\x1C\x80c)\xFC\x04u\x14a\0FW\x80c\xC0@b&\x14a\0kW\x80c\xF8\xCC\xBFG\x14a\0sW[`\0\x80\xFD[a\0Na\0\x90V[`@Q`\x01`\x01`\xA0\x1B\x03\x90\x91\x16\x81R` \x01[`@Q\x80\x91\x03\x90\xF3[a\0Na\x02*V[`\x0CTa\0\x80\x90`\xFF\x16\x81V[`@Q\x90\x15\x15\x81R` \x01a\0bV[`\0\x7F\x88\\\xB6\x92@\xA95\xD62\xD7\x9C1q\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-`\0\x1C`\x01`\x01`\xA0\x1B\x03\x16c\x7F\xB5)\x7F`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01`\0`@Q\x80\x83\x03\x81`\0\x87\x80;\x15\x80\x15a\0\xF0W`\0\x80\xFD[PZ\xF1\x15\x80\x15a\x01\x04W=`\0\x80>=`\0\xFD[PPPP`\0`@Qa\x01\x16\x90a\x02;V[`@Q\x80\x91\x03\x90`\0\xF0\x80\x15\x80\x15a\x012W=`\0\x80>=`\0\xFD[P`@\x80Q3`$\x80\x83\x01\x91\x90\x91R\x82Q\x80\x83\x03\x90\x91\x01\x81R`D\x90\x91\x01\x82R` \x81\x01\x80Q`\x01`\x01`\xE0\x1B\x03\x16c J\x7F\x07`\xE2\x1B\x17\x90R\x90Q\x91\x92P\x90`\0\x90\x83\x90\x83\x90a\x01\x82\x90a\x02HV[a\x01\x8D\x92\x91\x90a\x02UV[`@Q\x80\x91\x03\x90`\0\xF0\x80\x15\x80\x15a\x01\xA9W=`\0\x80>=`\0\xFD[P\x90P\x7F\x88\\\xB6\x92@\xA95\xD62\xD7\x9C1q\tp\x9E\xCF\xA9\x1A\x80bo\xF3\x98\x9Dh\xF6\x7F[\x1D\xD1-`\0\x1C`\x01`\x01`\xA0\x1B\x03\x16cv\xEA\xDD6`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01`\0`@Q\x80\x83\x03\x81`\0\x87\x80;\x15\x80\x15a\x02\nW`\0\x80\xFD[PZ\xF1\x15\x80\x15a\x02\x1EW=`\0\x80>=`\0\xFD[P\x92\x96\x95PPPPPPV[`\0\x80a\x025a\0\x90V[\x92\x91PPV[a\x10+\x80a\x02\xB5\x839\x01\x90V[a\x03\xE1\x80a\x12\xE0\x839\x01\x90V[`\x01\x80`\xA0\x1B\x03\x83\x16\x81R`\0` `@` \x84\x01R\x83Q\x80`@\x85\x01R`\0[\x81\x81\x10\x15a\x02\x92W\x85\x81\x01\x83\x01Q\x85\x82\x01``\x01R\x82\x01a\x02vV[P`\0``\x82\x86\x01\x01R```\x1F\x19`\x1F\x83\x01\x16\x85\x01\x01\x92PPP\x93\x92PPPV\xFE`\xA0`@R0`\x80R4\x80\x15a\0\x14W`\0\x80\xFD[Pa\0\x1Da\0\"V[a\0\xD4V[\x7F\xF0\xC5~\x16\x84\r\xF0@\xF1P\x88\xDC/\x81\xFE9\x1C9#\xBE\xC7>#\xA9f.\xFC\x9C\"\x9Cj\0\x80Th\x01\0\0\0\0\0\0\0\0\x90\x04`\xFF\x16\x15a\0rW`@Qc\xF9.\xE8\xA9`\xE0\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[\x80T`\x01`\x01`@\x1B\x03\x90\x81\x16\x14a\0\xD1W\x80T`\x01`\x01`@\x1B\x03\x19\x16`\x01`\x01`@\x1B\x03\x90\x81\x17\x82U`@Q\x90\x81R\x7F\xC7\xF5\x05\xB2\xF3q\xAE!u\xEEI\x13\xF4I\x9E\x1F&3\xA7\xB5\x93c!\xEE\xD1\xCD\xAE\xB6\x11Q\x81\xD2\x90` \x01`@Q\x80\x91\x03\x90\xA1[PV[`\x80Qa\x0F.a\0\xFD`\09`\0\x81\x81a\x07\x8B\x01R\x81\x81a\x07\xB4\x01Ra\t9\x01Ra\x0F.`\0\xF3\xFE`\x80`@R`\x046\x10a\0\xC2W`\x005`\xE0\x1C\x80c\x81)\xFC\x1C\x11a\0\x7FW\x80c\xAD<\xB1\xCC\x11a\0YW\x80c\xAD<\xB1\xCC\x14a\x02%W\x80c\xB7'O\xBE\x14a\x02cW\x80c\xF2\xFD\xE3\x8B\x14a\x02\x83W\x80c\xF3@\xFA\x01\x14a\x02\xA3W`\0\x80\xFD[\x80c\x81)\xFC\x1C\x14a\x01{W\x80c\x8D\xA5\xCB[\x14a\x01\x90W\x80c\x9A\xA3\xBBE\x14a\x01\xD7W`\0\x80\xFD[\x80c\x10\xEC\xD8\x03\x14a\0\xC7W\x80cI\xFE\rM\x14a\0\xE9W\x80cO\x1E\xF2\x86\x14a\x01\tW\x80cR\xD1\x90-\x14a\x01\x1CW\x80cqP\x18\xA6\x14a\x01DW\x80cq\xD8\xCA\x0B\x14a\x01YW[`\0\x80\xFD[4\x80\x15a\0\xD3W`\0\x80\xFD[Pa\0\xE7a\0\xE26`\x04a\x0C\x87V[a\x02\xB6V[\0[4\x80\x15a\0\xF5W`\0\x80\xFD[Pa\0\xE7a\x01\x046`\x04a\x0C\x87V[a\x03mV[a\0\xE7a\x01\x176`\x04a\x0C\xD2V[a\x04oV[4\x80\x15a\x01(W`\0\x80\xFD[Pa\x011a\x04\x8EV[`@Q\x90\x81R` \x01[`@Q\x80\x91\x03\x90\xF3[4\x80\x15a\x01PW`\0\x80\xFD[Pa\0\xE7a\x04\xABV[4\x80\x15a\x01eW`\0\x80\xFD[Pa\x01na\x04\xBFV[`@Qa\x01;\x91\x90a\r\xCCV[4\x80\x15a\x01\x87W`\0\x80\xFD[Pa\0\xE7a\x05<V[4\x80\x15a\x01\x9CW`\0\x80\xFD[P\x7F\x90\x16\xD0\x9Dr\xD4\x0F\xDA\xE2\xFD\x8C\xEA\xC6\xB6#Lw\x06!O\xD3\x9C\x1C\xD1\xE6\t\xA0R\x8C\x19\x93\0T`@Q`\x01`\x01`\xA0\x1B\x03\x90\x91\x16\x81R` \x01a\x01;V[4\x80\x15a\x01\xE3W`\0\x80\xFD[Pa\x02\x16a\x01\xF26`\x04a\r\xF6V[`\0` \x81\x90R\x90\x81R`@\x90 \x80T`\x01\x82\x01T`\x02\x90\x92\x01T\x90\x91`\xFF\x16\x90\x83V[`@Qa\x01;\x93\x92\x91\x90a\x0E\x11V[4\x80\x15a\x021W`\0\x80\xFD[Pa\x02V`@Q\x80`@\x01`@R\x80`\x05\x81R` \x01d\x03R\xE3\x02\xE3`\xDC\x1B\x81RP\x81V[`@Qa\x01;\x91\x90a\x0EWV[4\x80\x15a\x02oW`\0\x80\xFD[Pa\0\xE7a\x02~6`\x04a\x0E\x8AV[a\x06SV[4\x80\x15a\x02\x8FW`\0\x80\xFD[Pa\0\xE7a\x02\x9E6`\x04a\r\xF6V[a\x06\xBAV[a\0\xE7a\x02\xB16`\x04a\r\xF6V[a\x06\xFDV[3`\0\x90\x81R` \x81\x90R`@\x90 T\x15a\x02\xE4W`@Qc\x16\xA6\xB8C`\xE3\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[\x80`\0\x03a\x03\x05W`@Qcia\x07\x13`\xE0\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[`@\x80Q``\x81\x01\x90\x91R\x81\x81R` \x81\x01`\0\x81R`\0` \x91\x82\x01\x81\x90R3\x81R\x80\x82R`@\x90 \x82Q\x81U\x90\x82\x01Q`\x01\x80\x83\x01\x80T\x90\x91`\xFF\x19\x90\x91\x16\x90\x83\x81\x81\x11\x15a\x03XWa\x03Xa\r\x94V[\x02\x17\x90UP`@\x82\x01Q\x81`\x02\x01U\x90PPPV[\x80`\0\x03a\x03\x8EW`@Qcia\x07\x13`\xE0\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[3`\0\x90\x81R` \x81\x90R`@\x81 T\x90\x03a\x03\xBDW`@Qc\xF8\"\x86Y`\xE0\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[3`\0\x90\x81R` \x81\x81R`@\x80\x83 \x81Q``\x81\x01\x90\x92R\x80T\x82R`\x01\x80\x82\x01T\x92\x93\x91\x92\x91\x84\x01\x91`\xFF\x16\x90\x81\x11\x15a\x03\xFBWa\x03\xFBa\r\x94V[`\x01\x81\x11\x15a\x04\x0CWa\x04\x0Ca\r\x94V[\x81R`\x02\x91\x90\x91\x01T` \x91\x82\x01R\x83\x82R3`\0\x90\x81R\x80\x82R`@\x90 \x82Q\x81U\x90\x82\x01Q`\x01\x80\x83\x01\x80T\x94\x95P\x85\x94\x90\x91`\xFF\x19\x90\x91\x16\x90\x83\x81\x81\x11\x15a\x04YWa\x04Ya\r\x94V[\x02\x17\x90UP`@\x82\x01Q\x81`\x02\x01U\x90PPPPV[a\x04wa\x07\x80V[a\x04\x80\x82a\x08%V[a\x04\x8A\x82\x82a\x08lV[PPV[`\0a\x04\x98a\t.V[P`\0\x80Q` a\x0F\x02\x839\x81Q\x91R\x90V[a\x04\xB3a\twV[a\x04\xBD`\0a\t\xD2V[V[`@\x80Q``\x81\x01\x82R`\0\x80\x82R` \x82\x01\x81\x90R\x91\x81\x01\x91\x90\x91R3`\0\x90\x81R` \x81\x81R`@\x91\x82\x90 \x82Q``\x81\x01\x90\x93R\x80T\x83R`\x01\x80\x82\x01T\x91\x92\x84\x01\x91`\xFF\x16\x90\x81\x11\x15a\x05\x18Wa\x05\x18a\r\x94V[`\x01\x81\x11\x15a\x05)Wa\x05)a\r\x94V[\x81R` \x01`\x02\x82\x01T\x81RPP\x90P\x90V[\x7F\xF0\xC5~\x16\x84\r\xF0@\xF1P\x88\xDC/\x81\xFE9\x1C9#\xBE\xC7>#\xA9f.\xFC\x9C\"\x9Cj\0\x80T`\x01`@\x1B\x81\x04`\xFF\x16\x15\x90g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16`\0\x81\x15\x80\x15a\x05\x82WP\x82[\x90P`\0\x82g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x16`\x01\x14\x80\x15a\x05\x9FWP0;\x15[\x90P\x81\x15\x80\x15a\x05\xADWP\x80\x15[\x15a\x05\xCBW`@Qc\xF9.\xE8\xA9`\xE0\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[\x84Tg\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x19\x16`\x01\x17\x85U\x83\x15a\x05\xF5W\x84T`\xFF`@\x1B\x19\x16`\x01`@\x1B\x17\x85U[a\x05\xFE3a\nCV[a\x06\x06a\nTV[\x83\x15a\x06LW\x84T`\xFF`@\x1B\x19\x16\x85U`@Q`\x01\x81R\x7F\xC7\xF5\x05\xB2\xF3q\xAE!u\xEEI\x13\xF4I\x9E\x1F&3\xA7\xB5\x93c!\xEE\xD1\xCD\xAE\xB6\x11Q\x81\xD2\x90` \x01`@Q\x80\x91\x03\x90\xA1[PPPPPV[3`\0\x90\x81R` \x81\x90R`@\x81 T\x90\x03a\x06\x82W`@Qc\xF8\"\x86Y`\xE0\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[3`\0\x90\x81R` \x81\x90R`@\x90 `\x01\x90\x81\x01\x80T\x83\x92`\xFF\x19\x90\x91\x16\x90\x83\x81\x81\x11\x15a\x06\xB2Wa\x06\xB2a\r\x94V[\x02\x17\x90UPPV[a\x06\xC2a\twV[`\x01`\x01`\xA0\x1B\x03\x81\x16a\x06\xF1W`@Qc\x1EO\xBD\xF7`\xE0\x1B\x81R`\0`\x04\x82\x01R`$\x01[`@Q\x80\x91\x03\x90\xFD[a\x06\xFA\x81a\t\xD2V[PV[4`\0\x03a\x07\x1EW`@Qc\xA0C\x9C\x1F`\xE0\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[3`\0\x90\x81R` \x81\x90R`@\x81 T\x90\x03a\x07MW`@Qc\xF8\"\x86Y`\xE0\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[`\x01`\x01`\xA0\x1B\x03\x81\x16`\0\x90\x81R` \x81\x90R`@\x81 `\x02\x01\x80T4\x92\x90a\x07x\x90\x84\x90a\x0E\xABV[\x90\x91UPPPV[0`\x01`\x01`\xA0\x1B\x03\x7F\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x16\x14\x80a\x08\x07WP\x7F\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\x01`\x01`\xA0\x1B\x03\x16a\x07\xFB`\0\x80Q` a\x0F\x02\x839\x81Q\x91RT`\x01`\x01`\xA0\x1B\x03\x16\x90V[`\x01`\x01`\xA0\x1B\x03\x16\x14\x15[\x15a\x04\xBDW`@Qcp>F\xDD`\xE1\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[a\x08-a\twV[`@Q`\x01`\x01`\xA0\x1B\x03\x82\x16\x81R\x7F\xF7\x87!\"n\xFE\x9A\x1B\xB6x\x18\x9A\x16\xD1UI(\xB9\xF2\x19.,\xB9>\xED\xA8;y\xFA@\0}\x90` \x01`@Q\x80\x91\x03\x90\xA1PV[\x81`\x01`\x01`\xA0\x1B\x03\x16cR\xD1\x90-`@Q\x81c\xFF\xFF\xFF\xFF\x16`\xE0\x1B\x81R`\x04\x01` `@Q\x80\x83\x03\x81\x86Z\xFA\x92PPP\x80\x15a\x08\xC6WP`@\x80Q`\x1F=\x90\x81\x01`\x1F\x19\x16\x82\x01\x90\x92Ra\x08\xC3\x91\x81\x01\x90a\x0E\xCCV[`\x01[a\x08\xEEW`@QcL\x9C\x8C\xE3`\xE0\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x83\x16`\x04\x82\x01R`$\x01a\x06\xE8V[`\0\x80Q` a\x0F\x02\x839\x81Q\x91R\x81\x14a\t\x1FW`@Qc*\x87Ri`\xE2\x1B\x81R`\x04\x81\x01\x82\x90R`$\x01a\x06\xE8V[a\t)\x83\x83a\n\\V[PPPV[0`\x01`\x01`\xA0\x1B\x03\x7F\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x16\x14a\x04\xBDW`@Qcp>F\xDD`\xE1\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[3a\t\xA9\x7F\x90\x16\xD0\x9Dr\xD4\x0F\xDA\xE2\xFD\x8C\xEA\xC6\xB6#Lw\x06!O\xD3\x9C\x1C\xD1\xE6\t\xA0R\x8C\x19\x93\0T`\x01`\x01`\xA0\x1B\x03\x16\x90V[`\x01`\x01`\xA0\x1B\x03\x16\x14a\x04\xBDW`@Qc\x11\x8C\xDA\xA7`\xE0\x1B\x81R3`\x04\x82\x01R`$\x01a\x06\xE8V[\x7F\x90\x16\xD0\x9Dr\xD4\x0F\xDA\xE2\xFD\x8C\xEA\xC6\xB6#Lw\x06!O\xD3\x9C\x1C\xD1\xE6\t\xA0R\x8C\x19\x93\0\x80T`\x01`\x01`\xA0\x1B\x03\x19\x81\x16`\x01`\x01`\xA0\x1B\x03\x84\x81\x16\x91\x82\x17\x84U`@Q\x92\x16\x91\x82\x90\x7F\x8B\xE0\x07\x9CS\x16Y\x14\x13D\xCD\x1F\xD0\xA4\xF2\x84\x19I\x7F\x97\"\xA3\xDA\xAF\xE3\xB4\x18okdW\xE0\x90`\0\x90\xA3PPPV[a\nKa\n\xB2V[a\x06\xFA\x81a\n\xFBV[a\x04\xBDa\n\xB2V[a\ne\x82a\x0B\x03V[`@Q`\x01`\x01`\xA0\x1B\x03\x83\x16\x90\x7F\xBC|\xD7Z \xEE'\xFD\x9A\xDE\xBA\xB3 A\xF7U!M\xBCk\xFF\xA9\x0C\xC0\"[9\xDA.\\-;\x90`\0\x90\xA2\x80Q\x15a\n\xAAWa\t)\x82\x82a\x0BhV[a\x04\x8Aa\x0B\xE0V[\x7F\xF0\xC5~\x16\x84\r\xF0@\xF1P\x88\xDC/\x81\xFE9\x1C9#\xBE\xC7>#\xA9f.\xFC\x9C\"\x9Cj\0T`\x01`@\x1B\x90\x04`\xFF\x16a\x04\xBDW`@Qc\x1A\xFC\xD7\x9F`\xE3\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[a\x06\xC2a\n\xB2V[\x80`\x01`\x01`\xA0\x1B\x03\x16;`\0\x03a\x0B9W`@QcL\x9C\x8C\xE3`\xE0\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x82\x16`\x04\x82\x01R`$\x01a\x06\xE8V[`\0\x80Q` a\x0F\x02\x839\x81Q\x91R\x80T`\x01`\x01`\xA0\x1B\x03\x19\x16`\x01`\x01`\xA0\x1B\x03\x92\x90\x92\x16\x91\x90\x91\x17\x90UV[```\0\x80\x84`\x01`\x01`\xA0\x1B\x03\x16\x84`@Qa\x0B\x85\x91\x90a\x0E\xE5V[`\0`@Q\x80\x83\x03\x81\x85Z\xF4\x91PP=\x80`\0\x81\x14a\x0B\xC0W`@Q\x91P`\x1F\x19`?=\x01\x16\x82\x01`@R=\x82R=`\0` \x84\x01>a\x0B\xC5V[``\x91P[P\x91P\x91Pa\x0B\xD5\x85\x83\x83a\x0B\xFFV[\x92PPP[\x92\x91PPV[4\x15a\x04\xBDW`@Qc\xB3\x98\x97\x9F`\xE0\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[``\x82a\x0C\x14Wa\x0C\x0F\x82a\x0C^V[a\x0CWV[\x81Q\x15\x80\x15a\x0C+WP`\x01`\x01`\xA0\x1B\x03\x84\x16;\x15[\x15a\x0CTW`@Qc\x99\x96\xB3\x15`\xE0\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x85\x16`\x04\x82\x01R`$\x01a\x06\xE8V[P\x80[\x93\x92PPPV[\x80Q\x15a\x0CnW\x80Q\x80\x82` \x01\xFD[`@Qc\n\x12\xF5!`\xE1\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[`\0` \x82\x84\x03\x12\x15a\x0C\x99W`\0\x80\xFD[P5\x91\x90PV[\x805`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14a\x0C\xB7W`\0\x80\xFD[\x91\x90PV[cNH{q`\xE0\x1B`\0R`A`\x04R`$`\0\xFD[`\0\x80`@\x83\x85\x03\x12\x15a\x0C\xE5W`\0\x80\xFD[a\x0C\xEE\x83a\x0C\xA0V[\x91P` \x83\x015g\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x80\x82\x11\x15a\r\x0BW`\0\x80\xFD[\x81\x85\x01\x91P\x85`\x1F\x83\x01\x12a\r\x1FW`\0\x80\xFD[\x815\x81\x81\x11\x15a\r1Wa\r1a\x0C\xBCV[`@Q`\x1F\x82\x01`\x1F\x19\x90\x81\x16`?\x01\x16\x81\x01\x90\x83\x82\x11\x81\x83\x10\x17\x15a\rYWa\rYa\x0C\xBCV[\x81`@R\x82\x81R\x88` \x84\x87\x01\x01\x11\x15a\rrW`\0\x80\xFD[\x82` \x86\x01` \x83\x017`\0` \x84\x83\x01\x01R\x80\x95PPPPPP\x92P\x92\x90PV[cNH{q`\xE0\x1B`\0R`!`\x04R`$`\0\xFD[`\x02\x81\x10a\r\xC8WcNH{q`\xE0\x1B`\0R`!`\x04R`$`\0\xFD[\x90RV[\x81Q\x81R` \x80\x83\x01Q``\x83\x01\x91a\r\xE7\x90\x84\x01\x82a\r\xAAV[P`@\x92\x83\x01Q\x91\x90\x92\x01R\x90V[`\0` \x82\x84\x03\x12\x15a\x0E\x08W`\0\x80\xFD[a\x0CW\x82a\x0C\xA0V[\x83\x81R``\x81\x01a\x0E%` \x83\x01\x85a\r\xAAV[\x82`@\x83\x01R\x94\x93PPPPV[`\0[\x83\x81\x10\x15a\x0ENW\x81\x81\x01Q\x83\x82\x01R` \x01a\x0E6V[PP`\0\x91\x01RV[` \x81R`\0\x82Q\x80` \x84\x01Ra\x0Ev\x81`@\x85\x01` \x87\x01a\x0E3V[`\x1F\x01`\x1F\x19\x16\x91\x90\x91\x01`@\x01\x92\x91PPV[`\0` \x82\x84\x03\x12\x15a\x0E\x9CW`\0\x80\xFD[\x815`\x02\x81\x10a\x0CWW`\0\x80\xFD[\x80\x82\x01\x80\x82\x11\x15a\x0B\xDAWcNH{q`\xE0\x1B`\0R`\x11`\x04R`$`\0\xFD[`\0` \x82\x84\x03\x12\x15a\x0E\xDEW`\0\x80\xFD[PQ\x91\x90PV[`\0\x82Qa\x0E\xF7\x81\x84` \x87\x01a\x0E3V[\x91\x90\x91\x01\x92\x91PPV\xFE6\x08\x94\xA1;\xA1\xA3!\x06g\xC8(I-\xB9\x8D\xCA> v\xCC75\xA9 \xA3\xCAP]8+\xBC\xA1dsolcC\0\x08\x17\0\n`\x80`@R`@Qa\x03\xE18\x03\x80a\x03\xE1\x839\x81\x01`@\x81\x90Ra\0\"\x91a\x02hV[a\0,\x82\x82a\x003V[PPa\x03RV[a\0<\x82a\0\x92V[`@Q`\x01`\x01`\xA0\x1B\x03\x83\x16\x90\x7F\xBC|\xD7Z \xEE'\xFD\x9A\xDE\xBA\xB3 A\xF7U!M\xBCk\xFF\xA9\x0C\xC0\"[9\xDA.\\-;\x90`\0\x90\xA2\x80Q\x15a\0\x86Wa\0\x81\x82\x82a\x01\x0EV[PPPV[a\0\x8Ea\x01\x85V[PPV[\x80`\x01`\x01`\xA0\x1B\x03\x16;`\0\x03a\0\xCDW`@QcL\x9C\x8C\xE3`\xE0\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x82\x16`\x04\x82\x01R`$\x01[`@Q\x80\x91\x03\x90\xFD[\x7F6\x08\x94\xA1;\xA1\xA3!\x06g\xC8(I-\xB9\x8D\xCA> v\xCC75\xA9 \xA3\xCAP]8+\xBC\x80T`\x01`\x01`\xA0\x1B\x03\x19\x16`\x01`\x01`\xA0\x1B\x03\x92\x90\x92\x16\x91\x90\x91\x17\x90UV[```\0\x80\x84`\x01`\x01`\xA0\x1B\x03\x16\x84`@Qa\x01+\x91\x90a\x036V[`\0`@Q\x80\x83\x03\x81\x85Z\xF4\x91PP=\x80`\0\x81\x14a\x01fW`@Q\x91P`\x1F\x19`?=\x01\x16\x82\x01`@R=\x82R=`\0` \x84\x01>a\x01kV[``\x91P[P\x90\x92P\x90Pa\x01|\x85\x83\x83a\x01\xA6V[\x95\x94PPPPPV[4\x15a\x01\xA4W`@Qc\xB3\x98\x97\x9F`\xE0\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[V[``\x82a\x01\xBBWa\x01\xB6\x82a\x02\x05V[a\x01\xFEV[\x81Q\x15\x80\x15a\x01\xD2WP`\x01`\x01`\xA0\x1B\x03\x84\x16;\x15[\x15a\x01\xFBW`@Qc\x99\x96\xB3\x15`\xE0\x1B\x81R`\x01`\x01`\xA0\x1B\x03\x85\x16`\x04\x82\x01R`$\x01a\0\xC4V[P\x80[\x93\x92PPPV[\x80Q\x15a\x02\x15W\x80Q\x80\x82` \x01\xFD[`@Qc\n\x12\xF5!`\xE1\x1B\x81R`\x04\x01`@Q\x80\x91\x03\x90\xFD[cNH{q`\xE0\x1B`\0R`A`\x04R`$`\0\xFD[`\0[\x83\x81\x10\x15a\x02_W\x81\x81\x01Q\x83\x82\x01R` \x01a\x02GV[PP`\0\x91\x01RV[`\0\x80`@\x83\x85\x03\x12\x15a\x02{W`\0\x80\xFD[\x82Q`\x01`\x01`\xA0\x1B\x03\x81\x16\x81\x14a\x02\x92W`\0\x80\xFD[` \x84\x01Q\x90\x92P`\x01`\x01`@\x1B\x03\x80\x82\x11\x15a\x02\xAFW`\0\x80\xFD[\x81\x85\x01\x91P\x85`\x1F\x83\x01\x12a\x02\xC3W`\0\x80\xFD[\x81Q\x81\x81\x11\x15a\x02\xD5Wa\x02\xD5a\x02.V[`@Q`\x1F\x82\x01`\x1F\x19\x90\x81\x16`?\x01\x16\x81\x01\x90\x83\x82\x11\x81\x83\x10\x17\x15a\x02\xFDWa\x02\xFDa\x02.V[\x81`@R\x82\x81R\x88` \x84\x87\x01\x01\x11\x15a\x03\x16W`\0\x80\xFD[a\x03'\x83` \x83\x01` \x88\x01a\x02DV[\x80\x95PPPPPP\x92P\x92\x90PV[`\0\x82Qa\x03H\x81\x84` \x87\x01a\x02DV[\x91\x90\x91\x01\x92\x91PPV[`\x81\x80a\x03``\09`\0\xF3\xFE`\x80`@R`\n`\x0CV[\0[`\x18`\x14`\x1AV[`QV[V[`\0`L\x7F6\x08\x94\xA1;\xA1\xA3!\x06g\xC8(I-\xB9\x8D\xCA> v\xCC75\xA9 \xA3\xCAP]8+\xBCT`\x01`\x01`\xA0\x1B\x03\x16\x90V[\x90P\x90V[6`\0\x807`\0\x806`\0\x84Z\xF4=`\0\x80>\x80\x80\x15`oW=`\0\xF3[=`\0\xFD\xFE\xA1dsolcC\0\x08\x17\0\n\xA1dsolcC\0\x08\x17\0\n";
    /// The deployed bytecode of the contract.
    pub static DEPLOYBOX_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes =
        ::ethers::core::types::Bytes::from_static(__DEPLOYED_BYTECODE);
    pub struct DeployBox<M>(::ethers::contract::Contract<M>);
    impl<M> ::core::clone::Clone for DeployBox<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for DeployBox<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for DeployBox<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for DeployBox<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(::core::stringify!(DeployBox))
                .field(&self.address())
                .finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> DeployBox<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(::ethers::contract::Contract::new(
                address.into(),
                DEPLOYBOX_ABI.clone(),
                client,
            ))
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                DEPLOYBOX_ABI.clone(),
                DEPLOYBOX_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `IS_SCRIPT` (0xf8ccbf47) function
        pub fn is_script(&self) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([248, 204, 191, 71], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `deployBox` (0x29fc0475) function
        pub fn deploy_box(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::Address> {
            self.0
                .method_hash([41, 252, 4, 117], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `run` (0xc0406226) function
        pub fn run(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::Address> {
            self.0
                .method_hash([192, 64, 98, 38], ())
                .expect("method not found (this should never happen)")
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>> for DeployBox<M> {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    ///Container type for all input parameters for the `IS_SCRIPT` function with signature `IS_SCRIPT()` and selector `0xf8ccbf47`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "IS_SCRIPT", abi = "IS_SCRIPT()")]
    pub struct IsScriptCall;
    ///Container type for all input parameters for the `deployBox` function with signature `deployBox()` and selector `0x29fc0475`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "deployBox", abi = "deployBox()")]
    pub struct DeployBoxCall;
    ///Container type for all input parameters for the `run` function with signature `run()` and selector `0xc0406226`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "run", abi = "run()")]
    pub struct RunCall;
    ///Container type for all of the contract's call
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        serde::Serialize,
        serde::Deserialize,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub enum DeployBoxCalls {
        IsScript(IsScriptCall),
        DeployBox(DeployBoxCall),
        Run(RunCall),
    }
    impl ::ethers::core::abi::AbiDecode for DeployBoxCalls {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded) = <IsScriptCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::IsScript(decoded));
            }
            if let Ok(decoded) = <DeployBoxCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::DeployBox(decoded));
            }
            if let Ok(decoded) = <RunCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Run(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for DeployBoxCalls {
        fn encode(self) -> Vec<u8> {
            match self {
                Self::IsScript(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::DeployBox(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::Run(element) => ::ethers::core::abi::AbiEncode::encode(element),
            }
        }
    }
    impl ::core::fmt::Display for DeployBoxCalls {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::IsScript(element) => ::core::fmt::Display::fmt(element, f),
                Self::DeployBox(element) => ::core::fmt::Display::fmt(element, f),
                Self::Run(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<IsScriptCall> for DeployBoxCalls {
        fn from(value: IsScriptCall) -> Self {
            Self::IsScript(value)
        }
    }
    impl ::core::convert::From<DeployBoxCall> for DeployBoxCalls {
        fn from(value: DeployBoxCall) -> Self {
            Self::DeployBox(value)
        }
    }
    impl ::core::convert::From<RunCall> for DeployBoxCalls {
        fn from(value: RunCall) -> Self {
            Self::Run(value)
        }
    }
    ///Container type for all return fields from the `IS_SCRIPT` function with signature `IS_SCRIPT()` and selector `0xf8ccbf47`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct IsScriptReturn(pub bool);
    ///Container type for all return fields from the `deployBox` function with signature `deployBox()` and selector `0x29fc0475`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct DeployBoxReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `run` function with signature `run()` and selector `0xc0406226`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct RunReturn(pub ::ethers::core::types::Address);
}
